# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Club {
  Category: Float
  CategoryName: String
  LongName: String
  Name: String
  UniqueIndex: String
  VenueCount: Float
  VenueEntries: [Venue]
  Members(season: Float): [Member]
  Teams: [Team]
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Division {
  DivisionId: Float
  DivisionName: String
  DivisionCategory: Float
  Level: Float
  MatchType: Float
  Ranking: [RankingEntry]
}

type Member {
  Position: Float
  UniqueIndex: Int
  RankingIndex: Float
  FirstName: String!
  LastName: String!
  Ranking: String
  Status: String
  Club: String
  ClubEntry: Club
  Gender: String
  Category: String
  BirthDate: String
  MedicalAttestation: Boolean
  RankingPointsCount: Float
  Email: String
  Phone: String
  Address: String
  ResultCount: String
  ResultEntries: [PlayerResultEntryType]
}

type PlayerResultEntryType {
  SetFor: Float
  SetAgainst: Float
  CompetitionType: String
  Club: String
  MatchId: String
  Result: String
  Date: DateTime
  Opponent: Member
}

type Query {
  user(nameSearch: String, playerCategory: Float, season: Float, club: String, uniqueIndex: Float): [Member!]
  club(clubCategory: Float, season: Float, club: String!): Club
  clubs(clubCategory: Float, season: Float): [Club]
  getMatches(DivisionId: Float, Club: String, Team: String, DivisionCategory: Float, Season: Float, WeekName: String, Level: Float, YearDateFrom: String, YearDateTo: String, MatchId: String, MatchUniqueId: Float): [TeamMatch]
}

type RankingEntry {
  Position: Float
  Team: String
  GamesPlayed: Float
  GamesWon: Float
  GamesLost: Float
  GamesDraw: Float
  IndividualMatchesWon: Float
  IndividualMatchesLost: Float
  IndividualSetsWon: Float
  IndividualSetsLost: Float
  Points: Float
  Club: Club
}

type Team {
  TeamId: String
  Team: String
  Ranking: [RankingEntry]
  Division: Division
}

type TeamMatch {
  Division: Division
  MatchId: String
  WeekName: Float
  Date: String
  Time: String
  Venue: Float
  HomeTeam: String
  AwayTeam: String
  AwayClub: Club
  HomeClub: Club
  Score: String
  MatchUniqueId: String
  NextWeekName: Float
  PreviousWeekName: Float
  IsHomeForfeited: Boolean
  IsAwayForfeited: Boolean
}

type Venue {
  ClubVenue: Float
  Comment: String
  Id: Float
  Name: String
  Phone: String
  Street: String
  Town: String
}
